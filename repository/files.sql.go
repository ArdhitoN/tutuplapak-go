// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: files.sql

package repository

import (
	"context"
	"database/sql"
)

const createFile = `-- name: CreateFile :one
INSERT INTO files (file_uri, file_thumnail_uri, created_at, updated_at)
VALUES ($1, $2, NOW(), NOW())
    RETURNING id, file_uri, file_thumnail_uri, created_at, updated_at
`

type CreateFileParams struct {
	FileUri         string         `json:"file_uri"`
	FileThumnailUri sql.NullString `json:"file_thumnail_uri"`
}

func (q *Queries) CreateFile(ctx context.Context, arg CreateFileParams) (File, error) {
	row := q.db.QueryRowContext(ctx, createFile, arg.FileUri, arg.FileThumnailUri)
	var i File
	err := row.Scan(
		&i.ID,
		&i.FileUri,
		&i.FileThumnailUri,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getFileByID = `-- name: GetFileByID :one
SELECT id, file_uri, file_thumnail_uri, created_at, updated_at
FROM files
WHERE id = $1
`

func (q *Queries) GetFileByID(ctx context.Context, id int32) (File, error) {
	row := q.db.QueryRowContext(ctx, getFileByID, id)
	var i File
	err := row.Scan(
		&i.ID,
		&i.FileUri,
		&i.FileThumnailUri,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getFileByStringID = `-- name: GetFileByStringID :one
SELECT id, file_uri, file_thumnail_uri, created_at, updated_at
FROM files
WHERE id = $1::integer
`

func (q *Queries) GetFileByStringID(ctx context.Context, dollar_1 int32) (File, error) {
	row := q.db.QueryRowContext(ctx, getFileByStringID, dollar_1)
	var i File
	err := row.Scan(
		&i.ID,
		&i.FileUri,
		&i.FileThumnailUri,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
