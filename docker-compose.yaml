x-db-env: &db-env
  PGDATABASE: ${PGDATABASE:-postgres}
  POSTGRES_USER: ${POSTGRES_USER:-postgres}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
  POSTGRES_DB: ${POSTGRES_DB:-postgres}
  POSTGRES_PORT: ${POSTGRES_PORT:-5432}
  PGDATA: ${PGDATA:-/var/lib/postgresql/data}

services:
  # go:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: tutuplapak-go
  #   restart: unless-stopped
  #   ports:
  #     - "${PORT}:8080"
  #   environment:
  #     - APP_ENV=${APP_ENV}
  #     - PORT=8080
  #     - DATABASE_URL=${DATABASE_URL}
  #     - MINIO_ENDPOINT=${MINIO_ENDPOINT}
  #     - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
  #     - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
  #     - MINIO_USE_SSL=${MINIO_USE_SSL}
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     minio:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s

  postgres:
    image: postgres:17-alpine
    ports:
      - "5433:5432"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      <<: *db-env
    volumes:
      - pgdata:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    container_name: tutuplapak-minio
    restart: always
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9090" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  pgdata:

